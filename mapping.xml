<meta>
    <tasks>
       <task enable="true" name="Products" type="product" description="Copy Product info from Device42 to FreshService" d42_min_version="16.19.00">
            <api>
                <target model="products" target="freshservice" method="POST" update_method="PUT" path="api/v2/products" asset-type="Hardware"/>
                <resource target="device42" method="POST"
                          path="services/data/v1.0/query/"
                          doql="
                            select distinct
                                view_vendor_v1.name as manufacturer,
                                case WHEN view_device_v2.type = 'Virtual' THEN view_device_v2.type WHEN view_device_v2.type = 'Cluster' THEN view_device_v2.type ELSE coalesce(view_hardware_v2.name, view_device_v2.type) END as name
                                from view_device_v2 left join view_hardware_v2 on view_device_v2.hardware_fk = view_hardware_v2.hardware_pk
                                left join view_vendor_v1 on vendor_pk=vendor_fk
                            "
                        />
            </api>
            <mapping callback="from_d42" key="name" doql-suffix=" where GREATEST(view_hardware_v2.last_changed, view_vendor_v1.last_changed, view_device_v2.last_changed) >'%s'">
                <field resource="name" source-type="string" target="name" target-type="string" max-length="255" escape="true"/>
                <field resource="manufacturer" source-type="string" target="manufacturer" target-type="string"
                   not-null="true" set-space="true" min-length="1" max-length="255"/>
            </mapping>
        </task>

        <task enable="false" name="Devices" description="Copy Servers from Device42 to FreshService using DOQL v2" d42_min_version="19.03.00">
            <api>
                <target model="products" target="freshservice" method="POST" update_method="PUT" path="api/v2/products"/>
                <resource target="device42" method="POST" path="services/data/v1.0/query/"
                          doql="
                                WITH
                                devicelastlogin AS (
                                    with sub as ( SELECT dll.device_fk, dll.username, dll.domain, dll.sid, ROW_NUMBER() OVER(PARTITION BY dll.device_fk ORDER BY dll.last_login DESC, dll.devicelastlogin_pk DESC) AS rank FROM view_devicelastlogin_v1 dll )
                                    SELECT sub.*, (select email from view_enduser_v1 enduser where enduser.details->>'sid' = sub.sid limit 1) as enduser_email  FROM sub  WHERE rank = 1 )

                                ,alias as ( SELECT device_fk,  string_agg(alias_name, ', ' order by alias_name) as hostname FROM view_devicealias_v1 GROUP BY device_fk)

                                ,assetlifecycle AS (
                                    with sub as  (
                                        SELECT alc.device_fk, alc.date,
                                            ROW_NUMBER() OVER(PARTITION BY alc.device_fk ORDER BY alc.date DESC) AS rank
                                        FROM view_assetlifecycle_v1 alc
                                        INNER JOIN view_assetaction_v1 aaction ON alc.assetaction_fk = aaction.assetaction_pk WHERE aaction.name = 'Purchased')
                                    SELECT *   FROM sub  WHERE rank = 1    )

                                ,asset_endlifecycle AS (
                                    with sub as  (
                                        SELECT alc.device_fk, to_char(alc.date, 'YYYY-MM-DD') as date,
                                            ROW_NUMBER() OVER(PARTITION BY alc.device_fk ORDER BY alc.date) AS rank
                                        FROM view_assetlifecycle_v1 alc
                                        INNER JOIN view_assetaction_v1 aaction ON alc.assetaction_fk = aaction.assetaction_pk WHERE aaction.name = 'Retired')
                                    SELECT *   FROM sub  WHERE rank = 1    )

                                ,warranty AS (
                                    with sub as (
                                                SELECT plid.device_fk, pli.start_date, pli.end_date,
                                                    extract(year from age(pli.end_date, CASE WHEN lower(ven.name)='meraki' and pli.start_date='1970-01-01' THEN null else pli.start_date end)) warranty_years,
                                                    extract(month from age(pli.end_date, CASE WHEN lower(ven.name)='meraki' and pli.start_date='1970-01-01' THEN null else pli.start_date end)) + case when extract(day from age(pli.end_date, CASE WHEN lower(ven.name)='meraki' and pli.start_date='1970-01-01' THEN null else pli.start_date end)) > 0 then 1 else 0 end  warranty_months,
                                                    ven.name as purchase_order_vendor,
                                                    ROW_NUMBER() OVER(PARTITION BY plid.device_fk ORDER BY pli.end_date DESC) AS rank
                                                FROM view_purchaselineitems_to_devices_v1 plid
                                                INNER JOIN view_purchaselineitem_v1 pli ON plid.purchaselineitem_fk = pli.purchaselineitem_pk
                                                LEFT JOIN view_purchase_v1 pur ON pli.purchase_fk = pur.purchase_pk
                                                LEFT JOIN view_vendor_v1 ven ON pur.vendor_fk=ven.vendor_pk
                                                WHERE lower(pli.line_type) = 'contract'
                                                    and ( lower(pli.contract_type_name) = 'warranty'
                                                            or ( lower(pli.contract_type_name) in ('base', 'upgrade') and lower(ven.name) in ('ibm', 'lenovo'))
                                                        )
                                                      and pli.end_date is not null
                                                )
                                       SELECT *  FROM sub  WHERE rank = 1 )

                                ,part_count as (
                                    SELECT p.device_fk,
                                         SUM(p.pcount *
                                             CASE
                                               WHEN pm.hdsize_unit = 'GB' THEN pm.hdsize
                                               WHEN pm.hdsize_unit = 'TB' THEN pm.hdsize * 1024
                                               WHEN pm.hdsize_unit = 'PB' THEN pm.hdsize * 1024 * 1024
                                               WHEN pm.hdsize_unit = 'EB' THEN pm.hdsize * 1024 * 1024 * 1024
                                               WHEN pm.hdsize_unit = 'ZB' THEN pm.hdsize * 1024 * 1024 * 1024 * 1024
                                               WHEN pm.hdsize_unit = 'YB' THEN pm.hdsize * 1024 * 1024 * 1024 * 1024 * 1024
                                               ELSE NULL
                                             END) AS total_part_disk_size
                                         FROM view_part_v1 p
                                         INNER JOIN view_partmodel_v1 pm ON p.partmodel_fk = pm.partmodel_pk
                                         WHERE pm.type_id = 3 AND pm.hdsize IS NOT NULL AND p.pcount > 0 AND p.device_fk IS NOT NULL
                                         GROUP BY p.device_fk )

                                ,network_port_count as (
                                    SELECT p.device_fk,
                                         count(*) AS total_port_count
                                         from (
                                            select device_fk, hwaddress from view_netport_v1 where device_fk is not null
                                            union
                                            select second_device_fk as device_fk, hwaddress from view_netport_v1 where second_device_fk is not null
                                            ) p
                                         WHERE p.device_fk is not null
                                         GROUP BY p.device_fk )

                                ,total_costs as (
                                    select device_fk, sum(cost) as cost from view_purchaselineitem_v1 left join view_purchaselineitems_to_devices_v1 on purchaselineitem_fk = purchaselineitem_pk  group by device_fk)

                                ,network_hw as (
                                    select device_fk,
                                        string_agg(
                                            CASE
                                                WHEN LENGTH(TRIM(netport.hwaddress)) = 12
                                                THEN CONCAT_WS(':',left(TRIM(netport.hwaddress),2), substring(TRIM(netport.hwaddress),3,2), substring(TRIM(netport.hwaddress),5,2), substring(TRIM(netport.hwaddress),7,2), substring(TRIM(netport.hwaddress),9,2), right(TRIM(netport.hwaddress),2))
                                                ELSE
                                                    netport.hwaddress
                                                END, ', '
                                                order by netport.hwaddress) as hwaddress
												from (
													select device_fk, hwaddress from view_netport_v1 where device_fk is not null
													union
													select second_device_fk as device_fk, hwaddress from view_netport_v1 where second_device_fk is not null
													) netport
                                                where (netport.hwaddress is not null AND LENGTH(TRIM(netport.hwaddress)) > 0)
                                                group by netport.device_fk    )

                                ,network_ip as (
                                    select
                                        vip.device_fk,
                                        string_agg(host(vip.ip_address)::character varying, ', ' order by vip.ip_address) as ip_address,
                                        string_agg(case when vip.ip_address &lt;&lt; inet '10/8' or vip.ip_address &lt;&lt; inet '192/8' or vip.ip_address &lt;&lt; inet '172.16/12' then
                                            host(vip.ip_address)::character varying
                                            else null end, ', ' order by vip.ip_address) as private_ip_address,
                                        string_agg(case when vip.ip_address &lt;&lt; inet '10/8' or vip.ip_address &lt;&lt; inet '192/8' or vip.ip_address &lt;&lt; inet '172.16/12' then null
                                            else host(vip.ip_address)::character varying end, ', ' order by vip.ip_address) as public_ip_address,
                                    	string_agg(host(vip.subnet_mask)::character varying, ', ' order by vip.ip_address) as subnet_mask
                                        from (select distinct device_fk, ip_address, netmask(set_masklen(view_subnet_v1.network, view_subnet_v1.mask_bits)) as subnet_mask
                                            from view_ipaddress_v1 left join view_subnet_v1 on view_ipaddress_v1.subnet_fk = view_subnet_v1.subnet_pk) vip group by vip.device_fk)
                                ,device_cluster AS (
                                    SELECT device_cluster.child_device_fk device_fk,
                                        string_agg(device_cluster.parent_device_name, ', ' order by device_cluster.parent_device_name) as device_cluster_name
                                        FROM view_devices_in_cluster_v1 device_cluster group by device_cluster.child_device_fk)

                                ,mount_point as (
                                    select dr.device_fk, string_agg(resource.resource_name, ', ' order by resource.resource_name) as mountpoint
                                    from view_deviceresource_v1 dr left join view_resource_v2 resource on resource.resource_pk=dr.resource_fk where dr.relation = 'Mountpoint' group by dr.device_fk)

                                select view_device_v2.*,
                                    case
                                        WHEN view_device_v2.virtual_host AND lower(view_device_v2.os_name) like '%esxi%' THEN 'VMware VCenter Host'
                                        WHEN view_device_v2.virtual_host THEN 'Host'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.physicalsubtype) = 'laptop' THEN 'Laptop'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.physicalsubtype) = 'workstation' THEN 'Desktop'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.physicalsubtype) = 'network printer' THEN 'Printer'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.physicalsubtype) = 'router' THEN 'Router'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.physicalsubtype) = 'firewall' THEN 'Firewall'
                                        WHEN lower(view_device_v2.os_name) similar to '%(f5|netscaler)%' THEN 'Load Balancer'
                                        WHEN view_device_v2.network_device THEN 'Switch'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.os_name) similar to '%(windows|microsoft)%' AND lower(view_device_v2.os_name) like '%server%' THEN 'Windows Server'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.os_name) similar to '%(unix|z/os|z os|zos|hp-ux|os400|os/400|os 400|linux|amazon|ubuntu|centos|redhat|debian|sles|suse|gentoo|oracle|freebsd|rhel|red hat|fedora|alma|rocky|arch)%' THEN 'Unix Server'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.os_name) similar to '%(aix)%' THEN 'AIX Server'
                                        WHEN lower(view_device_v2.type) = 'physical' AND lower(view_device_v2.os_name) similar to '%(solaris|sunos|sun os)%' THEN 'Solaris Server'
                                        WHEN lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'vmware' THEN 'VMware VCenter VM'
                                        WHEN lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'amazon ec2 instance' THEN 'AWS VM'
                                        WHEN lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'azure virtual machine' THEN 'Azure VM'
                                        WHEN lower(view_device_v2.type) = 'physical' THEN 'Server'
                                        WHEN lower(view_device_v2.type) = 'virtual' THEN 'Virtual Machine'
                                        ELSE 'Computer'
                                    END as asset_type,
                                    coalesce(view_device_v2.physicalsubtype, view_device_v2.virtualsubtype) as device_subtype,
                                    view_device_v2.core_per_cpu * view_device_v2.total_cpus as total_cpucore,
                                    t_cost.cost,
                                    case WHEN view_device_v2.type = 'Virtual' THEN view_device_v2.type WHEN view_device_v2.type = 'Cluster' THEN view_device_v2.type ELSE coalesce(view_hardware_v2.name, view_device_v2.type) END as hw_model,
                                    case WHEN view_device_v2.hz = 'MHz' and view_device_v2.cpu_speed is not null  THEN view_device_v2.cpu_speed / 1000 ELSE view_device_v2.cpu_speed END as cpuspeed,
                                    case
                                        WHEN view_device_v2.ram_size_type = 'MB' and view_device_v2.ram is not null  THEN view_device_v2.ram / 1024
                                        WHEN view_device_v2.ram_size_type = 'TB' and view_device_v2.ram is not null  THEN view_device_v2.ram * 1024
                                        ELSE view_device_v2.ram END as ramsize,
                                    network_ip.ip_address,
                                    network_ip.public_ip_address,
                                    network_ip.private_ip_address,
                                    network_ip.subnet_mask,
                                    network_hw.hwaddress,
                                    CEIL(COALESCE(p.total_part_disk_size,
                                                    CASE
                                                        WHEN view_device_v2.hard_disk_count IS NOT NULL AND
                                                             view_device_v2.hard_disk_size IS NOT NULL AND
                                                             view_device_v2.hard_disk_size_type IS NOT NULL THEN
                                                                view_device_v2.hard_disk_count *
                                                                CASE
                                                                    WHEN view_device_v2.hard_disk_size_type = 'GB' THEN view_device_v2.hard_disk_size
                                                                    WHEN view_device_v2.hard_disk_size_type = 'TB' THEN view_device_v2.hard_disk_size * 1024
                                                                    WHEN view_device_v2.hard_disk_size_type = 'PB' THEN view_device_v2.hard_disk_size * 1024 * 1024
                                                                    ELSE NULL
                                                                END
                                                        ELSE NULL
                                                    END)) AS disk_size,
                                    warranty.warranty_months + (warranty.warranty_years * 12) as warranty_months,
                                    warranty.end_date as warranty_end_date,
                                    warranty.purchase_order_vendor as purchase_order_vendor,
                                    assetlifecycle.date as acquisition_date,
                                    asset_endlifecycle.date as end_of_life,
                                    case when lower(view_device_v2.os_name) like '%windows%' or lower(view_device_v2.os_name) like '%microsoft%' then view_device_v2.os_version_no else view_device_v2.os_version end as device_os_version,
                                    case when lower(view_device_v2.os_name) like '%windows%' or lower(view_device_v2.os_name) like '%microsoft%' then view_device_v2.os_version else view_device_v2.os_version_no end as device_os_version_no,
                                    alias.hostname as hostname,
                                    case when devicelastlogin.enduser_email is not null then devicelastlogin.enduser_email
                                          else devicelastlogin.username end as last_login_by,
                                    CASE
                                      WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'amazon ec2 instance') THEN substr(ci.location, 1, length(ci.location) - 1)
                                      WHEN (lower(view_device_v2.type) = 'virtual' AND (lower(view_device_v2.virtualsubtype) = 'azure virtual machine'
                                                                                                         OR lower(view_device_v2.virtualsubtype) = 'azure cloud service')) THEN ci.details->>'region_name'
                                      ELSE NULL
                                    END AS cloud_instance_region,
                                    CASE
                                      WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'amazon ec2 instance') THEN ci.location
                                      WHEN (lower(view_device_v2.type) = 'virtual' AND (lower(view_device_v2.virtualsubtype) = 'azure virtual machine'
                                                                                                         OR lower(view_device_v2.virtualsubtype) = 'azure cloud service')) THEN NULL
                                      ELSE NULL
                                    END AS cloud_instance_location,
                                    ci.instance_type as cloud_instance_type,
                                    ci.account as cloud_account,
                                    ci.image_id as cloud_image_id,
                                    ci.os_platform as cloud_os_platform,
                                    case
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'amazon ec2 instance')
                                            or lower(civ.name) similar to '%(aws|amazon)%' THEN 'AWS'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'azure virtual machine')
                                            or lower(civ.name) similar to '%(azure|microsoft)%' THEN 'AZURE'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'vmware')
                                            or lower(civ.name) like '%vmware%'
                                            or (view_device_v2.virtual_host and lower(view_device_v2.os_name) like '%esxi%') then 'VMWARE VCENTER'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'gce')
                                            or lower(civ.name) similar to '%(google|gce|gcp)%' then 'GCP'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'oracle cloud instance')
                                            or lower(civ.name) like '%oracle%' then 'Oracle Cloud'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND (lower(view_device_v2.virtualsubtype) = 'citrix/xen'
                                                or lower(view_device_v2.virtualsubtype) = 'xen'))
                                            or lower(civ.name) similar to '%(citrix|xen)%'
                                            or (view_device_v2.virtual_host and lower(view_device_v2.os_name) like '%xenserver%') then 'Citrix'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'hyper-v')
                                            or (view_device_v2.virtual_host and lower(view_device_v2.os_name) similar to '%(windows|microsoft)%' AND lower(view_device_v2.os_name) like '%server%') then 'Hyper-V'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'digitalocean instance')
                                            or lower(civ.name) similar to '%(digitalocean|digital ocean)%' then 'Digital Ocean'
                                        WHEN (lower(view_device_v2.type) = 'virtual' AND lower(view_device_v2.virtualsubtype) = 'alibaba cloud instance')
                                            or lower(civ.name) like '%alibaba%' then 'Alibaba Cloud'
                                        else null
                                    end as cloud_vendor,
                                    ci.instance_id as cloud_instance_id,
                                    ci.instance_name as cloud_instance_name,
                                    ci.status as cloud_instance_status,
                                    device_cluster.device_cluster_name as device_cluster_name,
                                    (view_device_v2.details ->> 'ebs_optimized')::boolean AS ebs_optimized,
                                    view_device_v2.details ->> 'hypervisor' AS aws_hypervisor,
                                    view_device_v2.details ->> 'iam_instance_profile' AS iam_instance_profile,
                                    view_device_v2.details ->> 'image_id' AS cloud_image_id,
                                    case
                                          WHEN LOWER(view_device_v2.details ->> 'instance_lifecycle') IN ('spot', 'scheduled') THEN view_device_v2.details ->> 'instance_lifecycle'
                                          ELSE 'normal'
                                    END AS instance_lifecycle,
                                    view_device_v2.details ->> 'key_name' AS key_name,
                                    (view_device_v2.details ->> 'launch_time')::timestamptz AS launch_time,
                                    view_device_v2.details ->> 'monitoring_state' AS monitoring_state,
                                    view_device_v2.details ->> 'private_dns_name' AS private_dns_name,
                                    view_device_v2.details ->> 'public_dns_name' AS public_dns_name,
                                    view_device_v2.details ->> 'security_groups' AS security_groups,
                                    view_device_v2.details ->> 'subnet_id' AS subnet_id,
                                    view_device_v2.details ->> 'vpc_id' AS vpc_id,
                                    view_device_v2.details ->> 'ami_launch_index' AS ami_launch_index,
                                    view_device_v2.details ->> 'offer' AS offer,
                                    view_device_v2.details ->> 'publisher' AS publisher,
                                    view_device_v2.details ->> 'os_disk_name' AS os_disk_name,
                                    view_device_v2.details ->> 'computer_name' AS computer_name,
                                    view_device_v2.details ->> 'resource_uri' AS resource_uri,
                                    mount_point.mountpoint as mountpoint,
                                    CONCAT_WS(' ',  view_device_v2.os_name, view_device_v2.os_version, view_device_v2.os_version_no) as hypervisor,
                                    hv.name as hardware_vendor,
                                    virtual_host_device.datacenter as host_datacenter,
                                    host_device_cluster.device_cluster_name as host_cluster_name,
                                	case
                                       when devicelastlogin.domain is not null then devicelastlogin.domain
                                       when view_device_v2.name ~* '^((?!-)[A-Za-z0-9-]{{1,63}}(?&lt;!-)\.)+[A-Za-z]{{2,6}}$' then substring(view_device_v2.name, position('.' in view_device_v2.name)+1)
	                                else null end domain_name,
	                                network_port_count.total_port_count as total_port_count,
                                    view_device_v2.details ->> 'intune_id' AS intune_id,
                                    view_device_v2.details ->> 'airwatch_id' AS airwatch_id,
                                    view_device_v2.details ->> 'automox_id' AS automox_id,
                                    format('Device-%s', view_device_v2.device_pk) as device42_id
                                FROM view_device_v2
                                LEFT JOIN view_hardware_v2          on view_device_v2.hardware_fk   = view_hardware_v2.hardware_pk
                                LEFT JOIN network_ip                on view_device_v2.device_pk     = network_ip.device_fk
                                LEFT JOIN network_hw                on view_device_v2.device_pk     = network_hw.device_fk
                                LEFT JOIN total_costs t_cost        on t_cost.device_fk             = device_pk
                                LEFT OUTER JOIN part_count AS p     ON view_device_v2.device_pk     = p.device_fk
                                LEFT OUTER JOIN warranty            ON view_device_v2.device_pk     = warranty.device_fk
                                LEFT OUTER JOIN assetlifecycle      ON view_device_v2.device_pk     = assetlifecycle.device_fk
                                LEFT OUTER JOIN asset_endlifecycle  ON view_device_v2.device_pk     = asset_endlifecycle.device_fk
                                LEFT OUTER JOIN alias               ON view_device_v2.device_pk     = alias.device_fk
                                LEFT OUTER JOIN devicelastlogin     ON view_device_v2.device_pk     = devicelastlogin.device_fk
                                LEFT JOIN view_cloudinstance_v1 as ci     ON view_device_v2.device_pk     = ci.device_fk
                                LEFT JOIN view_vendor_v1 as civ     ON ci.vendor_fk     = civ.vendor_pk
                                LEFT JOIN device_cluster            ON view_device_v2.device_pk     = device_cluster.device_fk
                                LEFT JOIN mount_point               ON view_device_v2.device_pk     = mount_point.device_fk
                                LEFT JOIN view_vendor_v1 as hv     ON view_hardware_v2.vendor_fk     = hv.vendor_pk
                                LEFT JOIN view_device_v2 as virtual_host_device     ON view_device_v2.virtual_host_device_fk     = virtual_host_device.device_pk
                                LEFT JOIN device_cluster as host_device_cluster     ON virtual_host_device.device_pk     = host_device_cluster.device_fk
                                LEFT JOIN network_port_count        ON view_device_v2.device_pk     = network_port_count.device_fk
                               "
                        />
            </api>
            <matching>
                <source-1 device42-id="device42_id" name="name" serial-number="serial_no" uuid="uuid" item-id="cloud_instance_id"/>
            </matching>
            <mapping callback="from_d42" key="name" source="Devices" doql-suffix=" where view_device_v2.last_edited>'%s' ">
                <!-- D42 Specific -->
                <field resource="device42_id" source-type="string" target="device42_id" target-type="string" target-header="General"/>
                <field resource="intune_id" source-type="string" target="source_asset_ids" target-field="intune_id" target-type="dict"/>
                <field resource="airwatch_id" source-type="string" target="source_asset_ids" target-field="airwatch_id" target-type="dict"/>
                <field resource="automox_id" source-type="string" target="source_asset_ids" target-field="automox_id" target-type="dict"/>
                <!-- ~D42 Specific -->

                <!--  General -->
                <field resource="asset_no" source-type="string" target="asset_tag" target-type="string"
                       target-header="General" not-null="true" min-length="1" max-length="255"/>
                <field resource="name" source-type="string" target="name" target-type="string" target-header="General"
                       set-space="true" min-length="1" max-length="248" escape="true"/>
                <field resource="notes" source-type="string" target="description" target-header="General"
                       not-null="true" set-space="true" min-length="1" max-length="60000"/>
                <field resource="end_of_life" source-type="string" target="end_of_life" target-type="date"
                       target-header="General"/>
                <!--  ~General -->

                <!--  Hardware -->
                <field resource="in_service" source-type="boolean" target="asset_state" target-type="string"
                       target-header="Hardware">
                    <value-mapping default="Retired">
                        <item key="true" value="In Use"/>
                    </value-mapping>
                </field>
                <field resource="hw_model" source-type="string" target="product" target-type="string"
                       target-header="Hardware"
                       target-foregin="products" target-foregin-key="name" not-null="true" required="True" max-length="255"/>
                <field resource="serial_no" source-type="string" target="serial_number" target-type="string"
                       target-header="Hardware" not-null="true" set-space="true"
                       min-length="1" max-length="255" error-skip="true"/>
                <field resource="warranty_months" source-type="integer" target="warranty" target-type="integer"
                       target-header="Hardware" not-null="true"/>
                <field resource="warranty_end_date" source-type="string" target="warranty_expiry_date" target-type="date"
                       target-header="Hardware" not-null="true"/>
                <field resource="acquisition_date" source-type="string" target="acquisition_date" target-type="date"
                       target-header="Hardware" not-null="true"/>
                <field resource="domain_name" source-type="string" target="domain" target-type="string"
                       target-header="Hardware" not-null="true" required="True" max-length="255"
                />
                <field resource="last_discovered" source-type="string" target="last_audit_date" target-type="date"
                       target-header="Hardware" not-null="true"/>
                <!-- Temporally don't map the vendor, because there is no way to sync the products and vendors using api right now.
                <field resource="purchase_order_vendor" source-type="string" target="vendor" target-type="string"
                       target-header="Hardware"
                       target-foregin="vendors" target-foregin-key="name" not-null="true" required="True" max-length="255"/>
                       -->
                <!--  ~Hardware -->

                <!--  Cost -->
                <field resource="cost" type="float" target="cost"
                       target-header="Cost" target-type="float" not-null="true" set-zero="true"/>
                <!--  ~Cost -->

                <!--  Computer -->
                <field resource="uuid" type="string" target="uuid"
                       target-header="Computer" not-null="true" set-space="true"
                       min-length="1" max-length="255"/>
                <field resource="ip_address" type="string" target="computer_ip_address"
                       target-header="Computer" not-null="true" max-length="255"/>
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Computer" not-null="true" max-length="255"/>
                <field resource="os_name" source-type="string" target="os" target-type="string"
                       target-header="Computer" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="device_os_version" source-type="string" target="os_version" target-type="string"
                       target-header="Computer" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="device_os_version_no" source-type="string" target="os_service_pack" target-type="string"
                       target-header="Computer" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="hostname" source-type="string" target="hostname" target-type="string"
                       target-header="Computer" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="last_login_by" source-type="string" target="last_login_by" target-type="string"
                       target-header="Computer" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="cpuspeed" source-type="float" target="cpu_speed" target-type="float"
                       target-header="Computer" not-null="true"/>
                <field resource="total_cpucore" source-type="integer" target="cpu_core_count" target-type="integer"
                       not-null="true"
                       target-header="Computer"/>
                <field resource="ramsize" source-type="float" target="memory" target-type="float"
                       target-header="Computer" not-null="true" />
                <field resource="disk_size" source-type="integer" target="disk_space" target-type="integer"
                       target-header="Computer" not-null="true" />
                <!--  ~Computer -->

                <!--  Cloud -->
                <field resource="cost" type="float" target="cloud_cost"
                       target-header="Cloud" target-type="float" not-null="true" set-zero="true"/>
                <field resource="cloud_instance_region" source-type="string" target="region" target-type="dropdown"
                       target-header="Cloud" not-null="true" min-length="1" max-length="255"/>
                <field resource="cloud_instance_location" source-type="string" target="cd_availability_zone" target-type="dropdown"
                       target-header="Cloud" not-null="true" min-length="1" max-length="255"/>
                <field resource="cloud_vendor" source-type="string" target="provider_type" target-type="string"
                       target-header="Cloud" not-null="true"/>
                <field resource="last_discovered" source-type="string" target="cloud_last_audit_date" target-type="date"
                       target-header="Cloud" not-null="true"/>
                <!--  ~Cloud -->

                <!--  Host -->
                <field resource="cloud_instance_id" source-type="string" target="item_id" target-type="string"
                       target-header="Host" not-null="true" error-skip="true"/>
                <field resource="cloud_instance_name" source-type="string" target="item_name" target-type="string"
                       target-header="Host" not-null="true"/>
                <field resource="ramsize" source-type="float" target="memory_size" target-type="float"
                       target-header="Host" not-null="true" />
                <field resource="total_cpucore" source-type="integer" target="cpu_core_count" target-type="integer"
                       not-null="true"
                       target-header="Host"/>
                <field resource="disk_size" source-type="integer" target="total_disk_size" target-type="integer"
                       target-header="Host" not-null="true" />
                <field resource="cloud_instance_status" source-type="string" target="state" target-type="string"
                       target-header="Host">
                    <value-mapping default="Unknown">
                        <item key="Running" value="Powered On"/>
                        <item key="Stopped" value="Powered Off"/>
                    </value-mapping>
                </field>
                <field resource="ip_address" type="string" target="ip_address"
                       target-header="Host" not-null="true" max-length="255"/>
                <!--  ~Host -->

                <!--  VMware VCenter Host -->
                <field resource="datacenter" type="string" target="datacenter"
                       target-header="VMware VCenter Host" not-null="true" max-length="255"/>
                <field resource="device_cluster_name" type="string" target="cluster"
                       target-header="VMware VCenter Host" not-null="true" max-length="255"/>
                <field resource="mountpoint" type="string" target="datastore"
                       target-header="VMware VCenter Host" not-null="true" max-length="255"/>
                <field resource="hypervisor" type="string" target="hypervisor"
                       target-header="VMware VCenter Host" not-null="true" max-length="255"/>
                <field resource="cpuspeed" source-type="float" target="cpu_speed" target-type="float"
                       target-header="VMware VCenter Host" not-null="true"/>
                <field resource="os_name" source-type="string" target="os_type" target-type="string"
                       target-header="VMware VCenter Host" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="uuid" type="string" target="instance_uuid"
                       target-header="VMware VCenter Host" not-null="true" set-space="true"
                       min-length="1" max-length="255"/>
                <field resource="serial_no" source-type="string" target="cd_serial_number" target-type="string"
                       target-header="VMware VCenter Host" not-null="true" set-space="true"
                       min-length="1" max-length="255" error-skip="true"/>
                <field resource="hardware_vendor" source-type="string" target="hardware_vendor" target-type="string"
                       target-header="VMware VCenter Host" not-null="true" set-space="true"
                       min-length="1" max-length="255" error-skip="true"/>
                <!--  ~VMware VCenter Host -->

                <!--  Virtual Machine -->
                <field resource="cloud_instance_id" source-type="string" target="item_id" target-type="string"
                       target-header="Virtual Machine" not-null="true" error-skip="true"/>
                <field resource="cloud_instance_name" source-type="string" target="item_name" target-type="string"
                       target-header="Virtual Machine" not-null="true"/>
                <field resource="cloud_instance_type" source-type="string" target="cd_instance_type" target-type="dropdown"
                       target-header="Virtual Machine" not-null="true" min-length="1" max-length="255"/>
                <field resource="public_ip_address" type="string" target="public_address"
                       target-header="Virtual Machine" not-null="true" max-length="255"/>
                <field resource="private_ip_address" type="string" target="private_address"
                       target-header="Virtual Machine" not-null="true" max-length="255"/>
                <field resource="cloud_instance_status" source-type="string" target="vm_state" target-type="string"
                       target-header="Virtual Machine">
                    <value-mapping default="Unknown">
                        <item key="Running" value="Running"/>
                        <item key="Stopped" value="Stopped"/>
                    </value-mapping>
                </field>
                <field resource="os_name" source-type="string" target="os_name" target-type="string"
                       target-header="Virtual Machine" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <!-- ~Virtual Machine -->

                <!-- VMWare VCenter VM -->
                <field resource="hostname" source-type="string" target="hostname" target-type="string"
                       target-header="VMware VCenter VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="mountpoint" type="string" target="datastore"
                       target-header="VMware VCenter VM" not-null="true" max-length="255"/>
                <field resource="ramsize" source-type="float" target="memory_size" target-type="float"
                       target-header="VMware VCenter VM" not-null="true" />
                <field resource="total_cpucore" source-type="integer" target="num_of_cpu" target-type="integer"
                       not-null="true"
                       target-header="VMware VCenter VM"/>
                <field resource="uuid" type="string" target="instance_uuid"
                       target-header="VMware VCenter VM" not-null="true" set-space="true"
                       min-length="1" max-length="255"/>
                <field resource="host_datacenter" source-type="string" target="datacenter" target-type="string"
                       target-header="VMware VCenter VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="host_cluster_name" source-type="string" target="cluster" target-type="string"
                       target-header="VMware VCenter VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <!-- ~VMWare VCenter VM -->

                <!-- AWS VM -->
                <field resource="cloud_account" source-type="string" target="account_id" target-type="integer"
                       target-header="AWS VM" not-null="true"/>
                <field resource="cloud_instance_id" source-type="string" target="cd_instance_id" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="cloud_image_id" source-type="string" target="image_id" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="cloud_os_platform" source-type="string" target="platform" target-type="dropdown"
                       target-header="AWS VM"/>
                <field resource="subnet_id" source-type="string" target="subnet_id" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="vpc_id" source-type="string" target="vpc_id" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="ebs_optimized" source-type="boolean" target="ebs_optimized" target-type="boolean"
                       target-header="AWS VM" not-null="true"/>
                <field resource="aws_hypervisor" source-type="string" target="hypervisor" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="iam_instance_profile" source-type="string" target="iam_instance_profile" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="instance_lifecycle" source-type="string" target="instance_lifecycle" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="key_name" source-type="string" target="key_name" target-type="string"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="launch_time" source-type="string" target="launch_time" target-type="date"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="monitoring_state" source-type="string" target="monitoring_state" target-type="dropdown"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="private_dns_name" source-type="string" target="private_dns_name"
                     target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
		  <field resource="public_dns_name" source-type="string" target="public_dns_name"
                     target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="ami_launch_index" source-type="string" target="ami_launch_index" target-type="integer"
                       target-header="AWS VM" not-null="true"/>
                <field resource="security_groups" source-type="string" target="security_groups"
                       target-header="AWS VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <!-- ~AWS VM -->

                <!-- Azure VM -->
                <field resource="cloud_account" source-type="string" target="subscription_id" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="hostname" source-type="string" target="computer_name" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="offer" source-type="string" target="offer" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="publisher" source-type="string" target="publisher" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="os_disk_name" source-type="string" target="os_disk_name" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="os_version" source-type="string" target="sku" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="computer_name" source-type="string" target="computer_name" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="resource_uri" source-type="string" target="resource_uri" target-type="string"
                       target-header="Azure VM" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <!-- ~Azure VM -->

                <!-- Printer -->
                <field resource="ip_address" type="string" target="ip_address"
                       target-header="Printer" not-null="true" max-length="255"/>
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Printer" not-null="true" max-length="255"/>
                <field resource="subnet_mask" type="string" target="subnet_mask"
                       target-header="Printer" not-null="true" max-length="255"/>
                <!-- ~Printer -->

                <!-- Router -->
                <field resource="os_name" source-type="string" target="firmware" target-type="string"
                       target-header="Router" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="os_version" source-type="string" target="firmware_version" target-type="string"
                       target-header="Router" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="ip_address" type="string" target="ip_address"
                       target-header="Router" not-null="true" max-length="255"/>
                <field resource="total_port_count" source-type="integer" target="ports" target-type="integer"
                       target-header="Router" not-null="true"/>
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Router" not-null="true" max-length="255"/>
                <field resource="subnet_mask" type="string" target="subnet_mask"
                       target-header="Router" not-null="true" max-length="255"/>
                <!-- ~Router -->

                <!-- Firewall -->
                <field resource="os_name" source-type="string" target="firmware" target-type="string"
                       target-header="Firewall" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="os_version" source-type="string" target="firmware_version" target-type="string"
                       target-header="Firewall" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="ip_address" type="string" target="ip_address"
                       target-header="Firewall" not-null="true" max-length="255"/>
                <field resource="total_port_count" source-type="integer" target="ports" target-type="integer"
                       target-header="Firewall" not-null="true"/>
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Firewall" not-null="true" max-length="255"/>
                <field resource="subnet_mask" type="string" target="subnet_mask"
                       target-header="Firewall" not-null="true" max-length="255"/>
                <!-- ~Firewall -->

                <!--  Load Balancer -->
                <field resource="cloud_instance_id" source-type="string" target="item_id" target-type="string"
                       target-header="Load Balancer" not-null="true" error-skip="true"/>
                <field resource="cloud_instance_name" source-type="string" target="item_name" target-type="string"
                       target-header="Load Balancer" not-null="true"/>
                <!--  ~Load Balancer -->

                <!-- Switch -->
                <field resource="os_name" source-type="string" target="firmware" target-type="string"
                       target-header="Switch" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="os_version" source-type="string" target="firmware_version" target-type="string"
                       target-header="Switch" not-null="true" set-space="true" min-length="1" max-length="255"/>
                <field resource="ip_address" type="string" target="ip_address"
                       target-header="Switch" not-null="true" max-length="255"/>
                <field resource="total_port_count" source-type="integer" target="ports" target-type="integer"
                       target-header="Switch" not-null="true"/>
                <field resource="hwaddress" type="string" target="mac_address"
                       target-header="Switch" not-null="true" max-length="255"/>
                <field resource="subnet_mask" type="string" target="subnet_mask"
                       target-header="Switch" not-null="true" max-length="255"/>
                <!-- ~Switch -->
            </mapping>
            <unmapping callback="from_d42" key="name" source="Devices" doql-suffix=" where view_device_v2.name='%s'">
                <field resource="network_device" source-type="boolean" display-name="Network Device"/>
                <field resource="blade_chassis" source-type="boolean" display-name="Blade Chassis"/>
                <field resource="device_subtype" source-type="string" display-name="Device Subtype"/>
            </unmapping>
            <d42url resource="device_pk" source-type="integer" url="{0}/admin/rackraj/device/{1}/" />
        </task>
        <task enable="false" name="D42 AWS Subnet to Freshservice AWS Subnet" type="Subnets" description="Copy AWS Subnet from Device42 to FreshService" d42_min_version="19.04.00">
          <api>
            <target model="assets" target="freshservice" method="POST" update_method="PUT" path="api/v2/assets" asset-type="assets"/>
            <resource model="Subnets" target="device42" method="POST" path="services/data/v1.0/query/"
            doql="
            SELECT
              subnet.name                                                              AS name,
              set_masklen(subnet.network, subnet.mask_bits) || '/' || subnet.mask_bits AS cidr_block,
              subnet.details ->> 'zone'                                                AS availability_zone,
              subnet.details ->> 'vendor_subnet_id'                                    AS item_id,
              subnet.details ->> 'vendor_available_ip_count'                           AS vendor_available_ip_count,
              subnet.details ->> 'state'                                               AS state,
              vrfgroup.name                                                            AS vpc_id,
              infra.account_id                                                         AS owner_id,
              'AWS'                                                                    AS provider,
              'AWS Subnet'                                                             AS asset_type,
              format('Subnet-%s', subnet.subnet_pk)                                    AS device42_id
            FROM
              view_subnet_v1 subnet
            JOIN view_vrfgroup_v1 vrfgroup ON subnet.vrfgroup_fk = vrfgroup.vrfgroup_pk
            JOIN view_cloudinfrastructure_v2 infra ON vrfgroup.cloudinfrastructure_fk = infra.cloudinfrastructure_pk
            JOIN view_vendor_v1 vendor ON infra.cloud_vendor_fk = vendor.vendor_pk
            WHERE infra.account_id is not null AND vendor.name = 'Amazon'
            "
            />
          </api>
          <matching>
              <source-1 device42-id="device42_id" name="name" item-id="item_id"/>
          </matching>
          <mapping callback="from_d42" key="name" doql-suffix=" AND subnet.last_changed > '%s'">
            <!-- AWS Subnet -->
            <field resource="device42_id" source-type="string" target="device42_id" target-type="string" target-header="General"/>
            <field resource="name" source-type="string" target="name" target-type="string" target-header="General" set-space="true" min-length="1" max-length="248" escape="true"/>
            <field resource="provider" source-type="string" target="provider_type" target-type="string" target-header="Cloud" not-null="true"/>
            <field resource="availability_zone" source-type="string" target="cd_availability_zone" target-header="Cloud" not-null="true" set-space="true" min-length="1" max-length="255"/>
            <field resource="name" source-type="string" target="item_name" target-type="string" target-header="Subnet" not-null="true"/>
            <field resource="item_id" source-type="string" target="item_id" target-type="string" target-header="Subnet" not-null="true" error-skip="true"/>
            <field resource="cidr_block" source-type="string" target="cidr_block" target-type="string" target-header="Subnet" not-null="true"/>
            <field resource="state" source-type="string" target="state" target-type="dropdown" target-header="AWS Subnet" not-null="true"/>
            <field resource="vendor_available_ip_count" source-type="integer" target="available_ip_address_count" target-type="integer" target-header="AWS Subnet" not-null="true"/>
            <field resource="vpc_id" source-type="string" target="vpc_id" target-header="AWS Subnet" not-null="true" set-space="true" min-length="1" max-length="255"/>
            <field resource="owner_id" source-type="string" target="owner_id" target-header="AWS Subnet" not-null="true" set-space="true" min-length="1" max-length="255"/>
          </mapping>
        </task>
       

       <task enable="false" name="D42 Azure Subscription to Freshservice Azure Subscription" type="Azure Subscription" description="Copy Azure Subscription from Device42 to FreshService" d42_min_version="19.04.00">
          <api>
            <target model="assets" target="freshservice" method="POST" update_method="PUT" path="api/v2/assets" asset-type="assets"/>
            <resource model="cloudinfrastructure" target="device42" method="POST" path="services/data/v1.0/query/"
            doql="
            SELECT
              infra.details ->> 'display_name'                                        AS name,
              infra.account_id                                                        AS item_id,
              infra.organization                                                      AS tenant,
              infra.details ->> 'state'                                               AS subscription_state,
              infra.details ->> 'authorization_source'                                AS authorization_source,
              infra.details ->> 'location_placement_id'                               AS location_placement_id,
              infra.details ->> 'quota_id'                                            AS quota_id,
              infra.details ->> 'spending_limit'                                      AS spending_limit,
              'AZURE'                                                                 AS provider,
              'Azure Subscription'                                                    AS asset_type,
              format('CloudInfrastructure-%s', infra.cloudinfrastructure_pk)          AS device42_id
            FROM
              view_cloudinfrastructure_v2 infra
            LEFT JOIN
              view_vendor_v1 vendor
              ON infra.cloud_vendor_fk = vendor.vendor_pk 
            WHERE vendor.name = 'Microsoft'
            "
            />
          </api>
          <matching>
              <source-1 device42-id="device42_id" name="name" item-id="item_id"/>
          </matching>
          <mapping callback="from_d42" key="name" doql-suffix=" AND infra.last_changed > '%s'">
            <!-- Azure Subscription -->
            <field resource="device42_id" source-type="string" target="device42_id" target-type="string" target-header="General"/>
            <field resource="name" source-type="string" target="name" target-type="string" target-header="General" set-space="true" min-length="1" max-length="248" escape="true"/>
            <field resource="name" source-type="string" target="item_name" target-type="string" target-header="Subscription" set-space="true" min-length="1" max-length="248" escape="true"/>
            <field resource="item_id" source-type="string" target="item_id" target-type="string" target-header="Subscription" not-null="true" error-skip="true"/>
            <field resource="provider" source-type="string" target="provider_type" target-type="string" target-header="Cloud" not-null="true"/>
            <field resource="authorization_source" source-type="string" target="authorization_source" target-type="string" target-header="Azure Subscription" not-null="true"/>
            <field resource="tenant" source-type="string" target="tenant_id" target-type="string" target-header="Azure Subscription" not-null="true"/>
            <field resource="subscription_state" source-type="string" target="subscription_state" target-type="dropdown" target-header="Azure Subscription" not-null="true" min-length="1" max-length="255"/>
            <field resource="location_placement_id" source-type="string" target="location_placement_id" target-type="string" target-header="Azure Subscription" not-null="true"/>
            <field resource="quota_id" source-type="string" target="quota_id" target-type="string" target-header="Azure Subscription" not-null="true"/>
            <field resource="spending_limit" source-type="string" target="spending_limit" target-type="string" target-header="Azure Subscription" not-null="true"/>
         </mapping>
       </task>

       <!-- GCP Security Group, AKA GCP Firewall Rules -->
        <task enable="true" name="D42 GCP Firewall Rules to Freshservice GCP Security Group" type="GCP Security Group" description="Copy GCP Firewall Rules from Device42 to FreshService" d42_min_version="19.04.00">
          <api>
            <target model="assets" target="freshservice" method="POST" update_method="PUT" path="api/v2/assets" asset-type="assets"/>
            <resource model="Resources" target="device42" method="POST" path="services/data/v1.0/query/"
            doql="
            SELECT
              resource.resource_name                                                     AS name,  
              resource.identifier                                                        AS item_id,     
              'global'                                                                   AS region,
              resource.details ->> 'description'                                         AS description,
              resource.details ->> 'network'                                             AS network,
              (resource.details ->> 'disabled')::boolean                                 AS disabled,
              resource.details ->> 'priority'                                            AS priority,
              resource.details ->> 'direction'                                           AS direction,
              resource.details ->> 'self_link'                                           AS self_link,
              resource.details ->> 'target_tags'                                         AS target_tags,
              resource.details ->> 'source_ranges'                                       AS source_ranges,
              resource.details ->> 'destination_ranges'                                  AS destination_ranges,
              (resource.details ->> 'created_timestamp')::timestamptz                    AS created_timestamp,
              resource.details ->> 'inbound_rules_count'                                 AS inbound_rules_count,
              resource.details ->> 'outbound_rules_count'                                AS outbound_rules_count,
              resource.details ->> 'log_config_enabled'                                  AS log_config_enabled,
              resource.details ->> 'allowed_ip_protocols'                                AS allowed_ip_protocols,
              resource.details ->> 'denied_ip_protocols'                                 AS denied_ip_protocols,
              'GCP'                                                                      AS provider,
              'GCP Security Group'                                                       AS asset_type,
              format('Resource-%s', resource.resource_pk)                                AS device42_id
            FROM
              view_resource_v2 resource
            WHERE resource.category @> ARRAY['gcp_firewall_rule']
            "
            />
          </api>
          <matching>
              <source-1 device42-id="device42_id" name="name" item-id="item_id"/>
          </matching>
          <mapping callback="from_d42" key="name" doql-suffix=" AND resource.last_changed > '%s'">
            <!-- GCP Security Group -->
            <field resource="name" source-type="string" target="name" target-type="string" target-header="General" set-space="true" min-length="1" max-length="248" escape="true"/>
            <field resource="provider" source-type="string" target="provider_type" target-type="string" target-header="Cloud" not-null="true"/>
            <field resource="region" source-type="string" target="region" target-type="dropdown" target-header="Cloud" not-null="true"/>
            <field resource="item_id" source-type="string" target="item_id" target-type="string" target-header="Security Group" not-null="true" error-skip="true"/>
            <field resource="name" source-type="string" target="item_name" target-type="string" target-header="Security Group" set-space="true" min-length="1" max-length="248" escape="true"/>
            <field resource="inbound_rules_count" source-type="integer" target="inbound_rules_count" target-type="integer" target-header="Security Group" skip-if-null="true"/>
            <field resource="outbound_rules_count" source-type="integer" target="outbound_rules_count" target-type="integer" target-header="Security Group" skip-if-null="true"/>
            <field resource="created_timestamp" source-type="date" target="creation_timestamp" target-type="date" target-header="GCP Security Group" not-null="true" set-space="true" min-length="1" max-length="255"/>
            <field resource="priority" source-type="string" target="priority" target-type="integer" target-header="GCP Security Group" not-null="true"/>
            <field resource="direction" source-type="string" target="direction" target-type="string" target-header="GCP Security Group" not-null="true"/>
            <field resource="disabled" source-type="boolean" target="disabled" target-type="boolean" target-header="GCP Security Group"/>
            <field resource="self_link" source-type="string" target="self_link" target-type="string" target-header="GCP Security Group" not-null="true"/>
            <field resource="description" source-type="string" target="description" target-header="GCP Security Group" not-null="true"/>
            <field resource="source_ranges" source-type="string" target="source_ranges" target-header="GCP Security Group" not-null="true"/>
            <field resource="destination_ranges" source-type="string" target="destination_ranges" target-header="GCP Security Group" not-null="true"/>
            <field resource="allowed_ip_protocols" source-type="string" target="allowed_ip_protocols" target-header="GCP Security Group" not-null="true"/>
            <field resource="denied_ip_protocols" source-type="string" target="denied_ip_protocols" target-header="GCP Security Group" not-null="true"/>
            <field resource="log_config_enabled" source-type="string" target="log_config_enabled" target-type="string" target-header="GCP Security Group" not-null="true"/>
         </mapping>
       </task>
    </tasks>
</meta>